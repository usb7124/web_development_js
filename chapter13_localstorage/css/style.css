body {
  background-color: #f4f4f4;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
}

#container {
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
  width: 500px;
}

/*
고급 선택자 : 태그명[속성="속성값"] : 선택된 태그들 중에서 지정된 속성이 속성값으로 설정된 요소만 선택하는 선택자
*/

input[type="text"] {
  width: calc(100% - 22px);
  padding: 10px;
  margin-bottom: 10px;
  border: 2px solid #ddd;
  border-radius: 4px;
}

button {
  width: 100%;
  padding: 10px;
  background-color: #5cb85c;  /*대표적인 버튼의 main 컬러에 해당*/
  border: none;
  border-radius: 4px;
  color: white;
  font-size: 16px;
  cursor: pointer;
}

button:hover {
  background-color: #4cae4c; /*대표적인 버튼의 secondary 컬러에 해당*/
}

ul {
  list-style: none;
  padding: 0;
}

/*
  script.js를 다 작성해서 renderTodos()를 호출 했을 때
  ul의 자식 태그인 li가 default css를 사용한다는 점을 알 수 있습니다.

  그리고, button태그의 경우에도 상위에 있는 button이었던 '추가'버튼과
  동일한 css를 가진다는 점을 확인할 수 있죠.

  그래서 이제 li와 button 중에서 deleteBtn에 해당하는 요소를 선택하여 css를 꾸미기
  시작할겁니다.
*/

li {
  background-color: #eee;
  margin-top: 8px;
  padding: 10px;
  border-radius: 4px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

button.deleteBtn {
  background-color: #d9634f;
  width: 80px;
  padding: 5px 10px;
  /* border: none;
  border-radius: 4px;
  color: white;
  font-size: 16px;
  cursor: pointer;
  이상의ㅏ 주석처리한 부분들은 상위 button 태그와 동일한 부분이므로
  일종의 css 상속이 이루어져서 현재 주서처리가 되어있음에도
  예를 들어 cursor: pointer;가 적용되어 있음을 확인할 수 있습니다
  */
  
}
